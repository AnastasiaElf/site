{"version":3,"sources":["images/elf.png","images/image1.jpg","images/image2.jpg","images/image3.jpg","images/me.jpg","images/gmail.png","images/github.svg","images/vk.png","components/pages/Home.js","components/pages/About.js","components/pages/Contact.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","image1","alt","image2","image3","Component","About","me","Contact","gmail","github","href","vk","App","renderContent","component","Redirect","to","pages_Home","pages_About","pages_Contact","Navbar","expand","NavbarBrand","logo","Nav","navbar","NavItem","NavLink","tag","RRDLink","activeClassName","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","Link","Switch","Route","exact","path","render","this","Boolean","window","location","hostname","match","WidgetContainer","withRouter","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,saCsCzBC,mLA9BX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,+BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAQF,UAAU,aAAaG,IAAI,eAC7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,kFAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,2DAGAH,EAAAC,EAAAC,cAAA,OAAKE,IAAKG,IAAQJ,UAAU,aAAaG,IAAI,gBAE/CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKI,IAAQL,UAAU,aAAaG,IAAI,eAC7CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,sFArBOM,8BCiBJC,mLAjBX,OACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKO,IAAIR,UAAU,WAAWG,IAAI,aACvCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,4EAEYH,EAAAC,EAAAC,cAAA,WAFZ,mFAPQO,gEC6BLG,mLAzBX,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKS,IAAOV,UAAU,gBAAgBG,IAAI,kBAC/CN,EAAAC,EAAAC,cAAA,oDAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKU,IAAQX,UAAU,gBAAgBG,IAAI,kBAChDN,EAAAC,EAAAC,cAAA,WAAM,YACJF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,mCAAR,kBAGJf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKY,IAAIb,UAAU,gBAAgBG,IAAI,kBAC5CN,EAAAC,EAAAC,cAAA,WAAM,QACJF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,0BAAR,6BAlBQN,aC0FPQ,6MAhCXC,cAAgB,SAACC,GAAD,OAAe,WAC3B,IAAKA,EACD,OACInB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAUC,GAAG,UAIrB,OAAQF,GACJ,IAAK,OACD,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACoB,EAAD,OAGZ,IAAK,QACD,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACqB,EAAD,OAGZ,IAAK,UACD,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACsB,EAAD,OAGZ,QACI,OAAOxB,EAAAC,EAAAC,cAAA,uFAjEf,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAQtB,UAAU,aAAauB,OAAO,MAClC1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAaZ,KAAK,SACdf,EAAAC,EAAAC,cAAA,OAAKE,IAAKwB,IAAMzB,UAAU,WAAWG,IAAI,UAE7CN,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAK1B,UAAU,UAAU2B,QAAM,GAC3B9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAS5B,UAAU,eACfH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASC,IAAKC,IAAS/B,UAAU,mBAAmBkB,GAAG,QAAQc,gBAAgB,UAA/E,UAGRnC,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAK1B,UAAU,UAAU2B,QAAM,GAC3B9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAS5B,UAAU,eACfH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASC,IAAKC,IAAS/B,UAAU,mBAAmBkB,GAAG,SAASc,gBAAgB,UAAhF,UAEJnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAS5B,UAAU,eACfH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASC,IAAKC,IAAS/B,UAAU,mBAAmBkB,GAAG,WAAWc,gBAAgB,UAAlF,YAEJnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAsBC,KAAG,EAACC,UAAQ,GAC9BtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBpC,UAAU,mBAAmBkC,KAAG,EAACG,OAAK,GAAtD,cAGAxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAcC,OAAK,EAACvC,UAAU,qBAC1BH,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAASC,IAAKU,IAAMxC,UAAU,yBAAyBkB,GAAG,UAA1D,eAKhBrB,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQC,KAAK/B,cAAc,UACrDlB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQC,KAAK/B,cAAc,WACtDlB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQC,KAAK/B,cAAc,aACxDlB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAOE,KAAK,IAAIC,OAAQC,KAAK/B,2BAlC/BT,aCZEyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,qFCVFC,EAAkBC,YAAWvC,GAEjCwC,IAAST,OAAOhD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KAAQ1D,EAAAC,EAAAC,cAACqD,EAAD,OAA8BI,SAASC,eAAe,SDuHxE,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.101d51e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/elf.07f3601f.png\";","module.exports = __webpack_public_path__ + \"static/media/image1.0dd250f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.00cdcacf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.44df0f1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/me.99695bac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.598d07e7.png\";","module.exports = __webpack_public_path__ + \"static/media/github.b53ff55e.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.008fe16b.png\";","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport image1 from \"./../../images/image1.jpg\";\nimport image2 from \"./../../images/image2.jpg\";\nimport image3 from \"./../../images/image3.jpg\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"home-title\">Welcome to my little world.</h1>\n        <div className=\"listing-cards\">\n          <div className=\"home-card\">\n            <img src={image1} className=\"card-image\" alt=\"card_image\" />\n            <div className=\"card-text\">\n              Don't be afraid to dream. Everything great in this world begins\n              with a dream.\n            </div>\n          </div>\n          <div className=\"home-card\">\n            <div className=\"card-text\">\n              Don't be afraid to admit love. Maybe it will be mutual.\n            </div>\n            <img src={image2} className=\"card-image\" alt=\"card_image\" />\n          </div>\n          <div className=\"home-card\">\n            <img src={image3} className=\"card-image\" alt=\"card_image\" />\n            <div className=\"card-text\">\n              Don't be afraid to create and experiment. Who knows what it can\n              lead to.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport me from \"./../../images/me.jpg\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"about-cards\">\n          <div className=\"about-card\">\n            <img src={me} className=\"me-image\" alt=\"me_image\" />\n            <div className=\"card-text\">\n              My name is Anastasia. I'm a cheerful pessimist and just a good\n              person =) <br /> Don't even try to understand me, otherwise you'll\n              break your head =D\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport gmail from \"./../../images/gmail.png\";\nimport github from \"./../../images/github.svg\";\nimport vk from \"./../../images/vk.png\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"contacts-card\">\n          <div className=\"contact\">\n            <img src={gmail} className=\"image-contact\" alt=\"image_contact\" />\n            <div> Email:  anastasia.elf.17@gmail.com </div>\n          </div>\n          <div className=\"contact\">\n            <img src={github} className=\"image-contact\" alt=\"image_contact\" />\n            <div>{\"Github:  \"}\n              <a href=\"https://github.com/AnastasiaElf\">AnastasiaElf</a>\n            </div>\n          </div>\n          <div className=\"contact\">\n            <img src={vk} className=\"image-contact\" alt=\"image_contact\" />\n            <div>{\"VK:  \"}\n              <a href=\"https://vk.com/elf_art\">vk.com/elf_art</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport './App.css';\nimport logo from \"./../images/elf.png\";\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu\n} from 'reactstrap';\nimport {\n    NavLink as RRDLink,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <Navbar className=\"app-navbar\" expand=\"md\">\n                    <NavbarBrand href=\"/home\">\n                        <img src={logo} className=\"app-logo\" alt=\"logo\" />\n                    </NavbarBrand>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem className=\"navbar-item\">\n                            <NavLink tag={RRDLink} className=\"navbar-item-link\" to=\"/home\" activeClassName=\"active\">Home</NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className=\"ml-auto\" navbar>\n                        <NavItem className=\"navbar-item\">\n                            <NavLink tag={RRDLink} className=\"navbar-item-link\" to=\"/about\" activeClassName=\"active\">About</NavLink>\n                        </NavItem>\n                        <NavItem className=\"navbar-item\">\n                            <NavLink tag={RRDLink} className=\"navbar-item-link\" to=\"/contact\" activeClassName=\"active\">Contact</NavLink>\n                        </NavItem>\n                        <UncontrolledDropdown nav inNavbar>\n                            <DropdownToggle className=\"navbar-item-link\" nav caret>\n                                Components\n                            </DropdownToggle>\n                            <DropdownMenu right className=\"nav-dropdown-menu\">\n                                <NavLink tag={Link} className=\"nav-dropdown-menu-item\" to=\"/demos\">Buttons</NavLink>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </Nav>\n                </Navbar>\n                <Switch>\n                    <Route exact path=\"/home\" render={this.renderContent(\"home\")} />\n                    <Route exact path=\"/about\" render={this.renderContent(\"about\")} />\n                    <Route exact path=\"/contact\" render={this.renderContent(\"contact\")} />\n                    <Route path=\"/\" render={this.renderContent()} />\n                </Switch>\n            </div>\n        );\n    }\n\n    renderContent = (component) => () => {\n        if (!component) {\n            return (\n                <Redirect to=\"/home\" />\n            )\n        }\n\n        switch (component) {\n            case \"home\":\n                return (\n                    <div className=\"content-container\">\n                        <Home />\n                    </div>\n                );\n            case \"about\":\n                return (\n                    <div className=\"content-container\">\n                        <About />\n                    </div>\n                );\n            case \"contact\":\n                return (\n                    <div className=\"content-container\">\n                        <Contact />\n                    </div>\n                );\n            default:\n                return <div />;\n        }\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\n\nlet WidgetContainer = withRouter(App);\n\nReactDOM.render(<Router><WidgetContainer /></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}